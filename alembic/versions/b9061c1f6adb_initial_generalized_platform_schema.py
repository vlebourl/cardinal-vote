"""Initial generalized platform schema

Revision ID: b9061c1f6adb
Revises:
Create Date: 2025-09-07 12:26:37.322587

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b9061c1f6adb"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # Create required PostgreSQL extensions
    op.execute("CREATE EXTENSION IF NOT EXISTS citext")

    # Create Row-Level Security functions needed for the generalized platform
    op.execute("""
        CREATE OR REPLACE FUNCTION current_user_id() RETURNS UUID AS $$
        BEGIN
            RETURN COALESCE(
                nullif(current_setting('app.current_user_id', true), ''),
                '00000000-0000-0000-0000-000000000000'
            )::UUID;
        END;
        $$ LANGUAGE plpgsql SECURITY DEFINER;
    """)
    op.execute("""
        CREATE OR REPLACE FUNCTION is_super_admin() RETURNS BOOLEAN AS $$
        BEGIN
            RETURN COALESCE(
                current_setting('app.is_super_admin', true)::boolean,
                false
            );
        END;
        $$ LANGUAGE plpgsql SECURITY DEFINER;
    """)
    op.execute("""
        CREATE OR REPLACE FUNCTION can_access_vote(vote_creator_id UUID) RETURNS BOOLEAN AS $$
        BEGIN
            RETURN vote_creator_id = current_user_id() OR is_super_admin();
        END;
        $$ LANGUAGE plpgsql SECURITY DEFINER;
    """)
    op.execute("""
        CREATE OR REPLACE FUNCTION set_session_context(
            user_id_param UUID,
            is_super_admin_param BOOLEAN DEFAULT FALSE
        ) RETURNS VOID AS $$
        BEGIN
            PERFORM set_config('app.current_user_id', user_id_param::text, false);
            PERFORM set_config('app.is_super_admin', is_super_admin_param::text, false);
        END;
        $$ LANGUAGE plpgsql SECURITY DEFINER;
    """)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "admin_sessions",
        sa.Column("id", sa.String(length=64), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("ip_address", sa.String(length=45), nullable=True),
        sa.Column("user_agent", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "admin_users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("password_hash", sa.String(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "users",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("email", postgresql.CITEXT(), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("first_name", sa.String(length=100), nullable=False),
        sa.Column("last_name", sa.String(length=100), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("is_super_admin", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("last_login", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_index("idx_users_email", "users", ["email"], unique=False)
    op.create_index(
        "idx_users_is_super_admin", "users", ["is_super_admin"], unique=False
    )
    op.create_table(
        "votes",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("voter_first_name", sa.String(length=50), nullable=False),
        sa.Column("voter_last_name", sa.String(length=50), nullable=False),
        sa.Column("voter_name", sa.String(length=100), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("ratings", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "generalized_votes",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("creator_id", sa.UUID(), nullable=False),
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("slug", sa.String(length=255), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("starts_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("ends_at", sa.DateTime(timezone=True), nullable=True),
        sa.CheckConstraint(
            "status IN ('draft', 'active', 'closed')", name="check_vote_status"
        ),
        sa.ForeignKeyConstraint(["creator_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("slug"),
    )
    op.create_index(
        "idx_votes_created_at", "generalized_votes", ["created_at"], unique=False
    )
    op.create_index(
        "idx_votes_creator_id", "generalized_votes", ["creator_id"], unique=False
    )
    op.create_index("idx_votes_slug", "generalized_votes", ["slug"], unique=False)
    op.create_index("idx_votes_status", "generalized_votes", ["status"], unique=False)
    op.create_table(
        "vote_options",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("vote_id", sa.UUID(), nullable=False),
        sa.Column("option_type", sa.String(length=20), nullable=False),
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("display_order", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.CheckConstraint(
            "option_type IN ('text', 'image')", name="check_option_type"
        ),
        sa.ForeignKeyConstraint(
            ["vote_id"], ["generalized_votes.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_vote_options_display_order",
        "vote_options",
        ["vote_id", "display_order"],
        unique=False,
    )
    op.create_index(
        "idx_vote_options_vote_id", "vote_options", ["vote_id"], unique=False
    )
    op.create_table(
        "voter_responses",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("vote_id", sa.UUID(), nullable=False),
        sa.Column("voter_first_name", sa.String(length=100), nullable=False),
        sa.Column("voter_last_name", sa.String(length=100), nullable=False),
        sa.Column("voter_ip", postgresql.INET(), nullable=True),
        sa.Column("responses", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column(
            "submitted_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["vote_id"], ["generalized_votes.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_voter_responses_submitted_at",
        "voter_responses",
        ["submitted_at"],
        unique=False,
    )
    op.create_index(
        "idx_voter_responses_unique",
        "voter_responses",
        ["vote_id", "voter_ip"],
        unique=True,
    )
    op.create_index(
        "idx_voter_responses_vote_id", "voter_responses", ["vote_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_voter_responses_vote_id", table_name="voter_responses")
    op.drop_index("idx_voter_responses_unique", table_name="voter_responses")
    op.drop_index("idx_voter_responses_submitted_at", table_name="voter_responses")
    op.drop_table("voter_responses")
    op.drop_index("idx_vote_options_vote_id", table_name="vote_options")
    op.drop_index("idx_vote_options_display_order", table_name="vote_options")
    op.drop_table("vote_options")
    op.drop_index("idx_votes_status", table_name="generalized_votes")
    op.drop_index("idx_votes_slug", table_name="generalized_votes")
    op.drop_index("idx_votes_creator_id", table_name="generalized_votes")
    op.drop_index("idx_votes_created_at", table_name="generalized_votes")
    op.drop_table("generalized_votes")
    op.drop_table("votes")
    op.drop_index("idx_users_is_super_admin", table_name="users")
    op.drop_index("idx_users_email", table_name="users")
    op.drop_table("users")
    op.drop_table("admin_users")
    op.drop_table("admin_sessions")
    # ### end Alembic commands ###
