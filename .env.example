# ToV'éCo Logo Voting Platform - Environment Configuration
# Copy this file to .env and modify the values as needed

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Application name displayed in the interface
APP_NAME="ToV'éCo Logo Voting Platform"

# Application version
APP_VERSION="0.1.0"

# Environment: development, production, docker
TOVECO_ENV=production

# Enable debug mode (true/false)
# WARNING: Never enable debug mode in production!
DEBUG=false

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server host (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
HOST=0.0.0.0

# Server port
PORT=8000

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# SQLite database file path
# For Docker: use /app/data/votes.db (persistent volume)
# For local: use votes.db or ./data/votes.db
DATABASE_PATH=/app/data/votes.db

# Alternative: PostgreSQL configuration (if switching from SQLite)
# DATABASE_URL=postgresql://toveco:password@postgres:5432/toveco_voting
# DATABASE_DRIVER=postgresql

# =============================================================================
# FILE PATHS
# =============================================================================

# Base directory for file paths (usually auto-detected)
# BASE_DIR=/app

# Directory containing logo files
# LOGOS_DIR=/app/logos

# Directory containing HTML templates
# TEMPLATES_DIR=/app/templates

# Directory containing static files (CSS, JS)
# STATIC_DIR=/app/static

# =============================================================================
# LOGO CONFIGURATION
# =============================================================================

# Logo file prefix (logos should be named like toveco1.png, toveco2.png, etc.)
LOGO_PREFIX=toveco

# Logo file extension
LOGO_EXTENSION=.png

# Expected number of logo files (for validation)
EXPECTED_LOGO_COUNT=11

# =============================================================================
# VOTING CONFIGURATION
# =============================================================================

# Vote rating scale minimum value
MIN_RATING=-2

# Vote rating scale maximum value
MAX_RATING=2

# Maximum length for voter names
MAX_VOTER_NAME_LENGTH=100

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# CORS allowed origins (comma-separated)
# For production: set to your actual domain
# ALLOWED_ORIGINS=https://voting.toveco.com,https://www.toveco.com
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000,http://127.0.0.1:8000

# Rate limiting: maximum votes per IP per hour
MAX_VOTES_PER_IP_PER_HOUR=5

# Enable rate limiting (true/false)
ENABLE_RATE_LIMITING=true

# Enable secure headers (true/false)
SECURE_HEADERS=true

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level: debug, info, warning, error
LOG_LEVEL=info

# Log directory (for file logging)
LOG_DIR=/app/logs

# Log file name
LOG_FILE=toveco-voting.log

# Maximum log file size in MB
LOG_MAX_SIZE=50

# Maximum number of log files to keep
LOG_BACKUP_COUNT=10

# =============================================================================
# PRODUCTION SECRETS
# =============================================================================

# Database password (for PostgreSQL)
# POSTGRES_PASSWORD=your_secure_database_password

# Redis password (if using Redis for sessions/caching)
# REDIS_PASSWORD=your_secure_redis_password

# Secret key for session management (generate with: python -c "import secrets; print(secrets.token_hex(32))")
# SECRET_KEY=your_secret_key_here

# =============================================================================
# MONITORING AND OBSERVABILITY
# =============================================================================

# Enable Prometheus metrics (true/false)
ENABLE_METRICS=false

# Metrics endpoint path
METRICS_PATH=/metrics

# Enable application performance monitoring
ENABLE_APM=false

# APM service URL
# APM_SERVICE_URL=http://jaeger:14268/api/traces

# =============================================================================
# EMAIL CONFIGURATION (Optional)
# =============================================================================

# SMTP settings for notifications
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your_email@gmail.com
# SMTP_PASSWORD=your_app_password
# SMTP_TLS=true

# Admin email for notifications
# ADMIN_EMAIL=admin@toveco.com

# =============================================================================
# BACKUP CONFIGURATION (Optional)
# =============================================================================

# Enable automatic database backups (true/false)
ENABLE_BACKUP=false

# Backup directory
BACKUP_DIR=/app/backups

# Backup retention in days
BACKUP_RETENTION_DAYS=30

# Backup schedule (cron format)
BACKUP_SCHEDULE="0 2 * * *"

# =============================================================================
# DOCKER-SPECIFIC SETTINGS
# =============================================================================

# Docker container timezone
TZ=UTC

# User ID and Group ID for file permissions
# UID=1000
# GID=1000

# =============================================================================
# SSL/TLS CONFIGURATION (for reverse proxy)
# =============================================================================

# Domain name for SSL certificate
# DOMAIN=voting.toveco.com

# SSL certificate email for Let's Encrypt
# SSL_EMAIL=admin@toveco.com

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Enable development mode features (true/false)
DEV_MODE=false

# Auto-reload on code changes (development only)
AUTO_RELOAD=false

# Show detailed error pages (development only)
SHOW_ERROR_DETAILS=false

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Uvicorn worker count (for production, usually 1 for SQLite)
WORKER_COUNT=1

# Worker timeout in seconds
WORKER_TIMEOUT=30

# Maximum request size in bytes
MAX_REQUEST_SIZE=1048576

# Connection timeout in seconds
CONNECTION_TIMEOUT=60

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable results export feature (true/false)
ENABLE_RESULTS_EXPORT=true

# Enable admin dashboard (true/false)
ENABLE_ADMIN_DASHBOARD=true

# =============================================================================
# ADMIN CONFIGURATION
# =============================================================================
# REQUIRED: These must be set for the application to start

# Admin username (choose a secure username)
ADMIN_USERNAME=

# Admin password (use a strong password)
ADMIN_PASSWORD=

# Session secret key (generate with: python -c "import secrets; print(secrets.token_urlsafe(32))")
# This MUST be a random value and kept secret
SESSION_SECRET_KEY=

# Session lifetime in hours
SESSION_LIFETIME_HOURS=8

# Maximum login attempts before rate limiting
MAX_LOGIN_ATTEMPTS=5

# Login attempt rate limiting window in minutes
LOGIN_ATTEMPT_WINDOW_MINUTES=15

# Maximum file upload size in MB
MAX_UPLOAD_SIZE_MB=5

# Enable real-time results (true/false)
ENABLE_REALTIME_RESULTS=false

# Enable vote editing (true/false)
ENABLE_VOTE_EDITING=false
